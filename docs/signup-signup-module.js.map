{"version":3,"sources":["webpack:///./src/app/auth/signup-info.ts","webpack:///./src/app/signup/signup-routing.module.ts","webpack:///./src/app/signup/signup.component.html","webpack:///./src/app/signup/signup.component.scss","webpack:///./src/app/signup/signup.component.ts","webpack:///./src/app/signup/signup.module.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;IAKI,oBAAY,QAAgB,EAAC,QAAgB;QAC7C,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACtB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACxB,IAAI,CAAC,IAAI,GAAG,CAAC,MAAM,CAAC,CAAC;IACzB,CAAC;IACL,iBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;ACVwC;AACc;AACF;AAErD,IAAM,MAAM,GAAW;IACnB;QACI,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,iEAAe;KACvC;CACJ,CAAC;AAMF;IAAA;IACA,CAAC;IADY,mBAAmB;QAJ/B,8DAAQ,CAAC;YACN,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;YACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;SAC1B,CAAC;OACW,mBAAmB,CAC/B;IAAD,0BAAC;CAAA;AAD+B;;;;;;;;;;;;ACdhC,8rFAA8rF,cAAc,8H;;;;;;;;;;;ACA5sF,mB;;;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AAEC;AACF;AAOjD;IAOE,yBAAoB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;QAN5C,SAAI,GAAQ,EAAE,CAAC;QAEf,eAAU,GAAG,KAAK,CAAC;QACnB,mBAAc,GAAG,KAAK,CAAC;QACvB,iBAAY,GAAG,EAAE,CAAC;IAE8B,CAAC;IAEjD,kCAAQ,GAAR,cAAa,CAAC;IAEd,kCAAQ,GAAR;QAAA,iBAmBC;QAlBC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAEvB,IAAI,CAAC,UAAU,GAAG,IAAI,4DAAU,CAC9B,IAAI,CAAC,IAAI,CAAC,QAAQ,EAClB,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAEtB,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,SAAS,CAChD,cAAI;YACF,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAClB,KAAI,CAAC,UAAU,GAAG,IAAI,CAAC;YACvB,KAAI,CAAC,cAAc,GAAG,KAAK,CAAC;QAC9B,CAAC,EACD,eAAK;YACH,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YACnB,KAAI,CAAC,YAAY,GAAG,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC;YACxC,KAAI,CAAC,cAAc,GAAG,IAAI,CAAC;QAC7B,CAAC,CACF,CAAC;IACJ,CAAC;IA9BU,eAAe;QAL3B,+DAAS,CAAC;YACT,QAAQ,EAAE,cAAc;;;SAGzB,CAAC;yCAQiC,8DAAW;OAPjC,eAAe,CA+B3B;IAAD,sBAAC;CAAA;AA/B2B;;;;;;;;;;;;;;;;;;;;;;;;;ACVa;AACM;AAEe;AACT;AASrD;IAAA;IAA4B,CAAC;IAAhB,YAAY;QAPxB,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,0EAAmB;aACpB;YACD,YAAY,EAAE,CAAC,iEAAe,CAAC;SAChC,CAAC;OACW,YAAY,CAAI;IAAD,mBAAC;CAAA;AAAJ","file":"signup-signup-module.js","sourcesContent":["export class SignUpInfo {\r\n   username: string;\r\n    role: string[];\r\n    password: string;\r\n\r\n    constructor(username: string,password: string) {\r\n    this.username = username;\r\n       this.password = password;\r\n        this.role = ['user'];\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { SignupComponent } from './signup.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '', component: SignupComponent\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class SignupRoutingModule {\r\n}\r\n","module.exports = \"<div class=\\\"login-page\\\" [@routerTransition]>\\r\\n    <div class=\\\"row justify-content-md-center\\\">\\r\\n        <div class=\\\"col-md-4\\\">\\r\\n            <img class=\\\"user-avatar\\\" src=\\\"assets/images/logo.png\\\" width=\\\"150px\\\" />\\r\\n            <h1>Welcome AddLife</h1>\\r\\n            <form name=\\\"form\\\" (ngSubmit)=\\\"f.form.valid && onSubmit()\\\" #f=\\\"ngForm\\\" novalidate>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                  <label for=\\\"name\\\">Your name</label>\\r\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"name\\\" [(ngModel)]=\\\"form.name\\\" #name=\\\"ngModel\\\" required />\\r\\n                  <div *ngIf=\\\"f.submitted && name.invalid\\\">\\r\\n                    <div *ngIf=\\\"name.errors.required\\\">Name is required</div>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                  <label for=\\\"username\\\">Username</label>\\r\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"username\\\" [(ngModel)]=\\\"form.username\\\" #username=\\\"ngModel\\\"\\r\\n                    required />\\r\\n                  <div *ngIf=\\\"f.submitted && username.invalid\\\">\\r\\n                    <div *ngIf=\\\"username.errors.required\\\">Username is required</div>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                  <label for=\\\"email\\\">Email</label>\\r\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"email\\\" [(ngModel)]=\\\"form.email\\\" #email=\\\"ngModel\\\" required email />\\r\\n                  <div *ngIf=\\\"f.submitted && email.invalid\\\">\\r\\n                    <div *ngIf=\\\"email.errors.required\\\">Email is required</div>\\r\\n                    <div *ngIf=\\\"email.errors.email\\\">Email must be a valid email address</div>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                  <label for=\\\"password\\\">Password</label>\\r\\n                  <input type=\\\"password\\\" class=\\\"form-control\\\" name=\\\"password\\\" [(ngModel)]=\\\"form.password\\\" #password=\\\"ngModel\\\"\\r\\n                    required minlength=\\\"6\\\" />\\r\\n                  <div *ngIf=\\\"f.submitted && password.invalid\\\">\\r\\n                    <div *ngIf=\\\"password.errors.required\\\">Password is required</div>\\r\\n                    <div *ngIf=\\\"password.errors.minlength\\\">Password must be at least 6 characters</div>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                  <button class=\\\"btn btn-primary\\\">Register</button>\\r\\n                  <div *ngIf=\\\"f.submitted && isSignUpFailed\\\" class=\\\"alert alert-warning\\\">\\r\\n                    Signup failed!<br/>{{errorMessage}}\\r\\n                  </div>\\r\\n                </div>\\r\\n              </form>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { AuthService } from '../auth/auth.service';\r\nimport { SignUpInfo } from '../auth/signup-info';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './signup.component.html',\r\n  styleUrls: ['./signup.component.scss']\r\n})\r\nexport class SignupComponent implements OnInit {\r\n  form: any = {};\r\n  signupInfo: SignUpInfo;\r\n  isSignedUp = false;\r\n  isSignUpFailed = false;\r\n  errorMessage = '';\r\n\r\n  constructor(private authService: AuthService) { }\r\n\r\n  ngOnInit() { }\r\n\r\n  onSubmit() {\r\n    console.log(this.form);\r\n\r\n    this.signupInfo = new SignUpInfo(\r\n      this.form.username,\r\n      this.form.password);\r\n\r\n    this.authService.signUp(this.signupInfo).subscribe(\r\n      data => {\r\n        console.log(data);\r\n        this.isSignedUp = true;\r\n        this.isSignUpFailed = false;\r\n      },\r\n      error => {\r\n        console.log(error);\r\n        this.errorMessage = error.error.message;\r\n        this.isSignUpFailed = true;\r\n      }\r\n    );\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { SignupRoutingModule } from './signup-routing.module';\r\nimport { SignupComponent } from './signup.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    SignupRoutingModule\r\n  ],\r\n  declarations: [SignupComponent]\r\n})\r\nexport class SignupModule { }\r\n"],"sourceRoot":""}