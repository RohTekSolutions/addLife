{"version":3,"sources":["webpack:///./src/app/layout/form/admin/models/MembershipRegistration.ts","webpack:///./src/app/layout/form/admin/registration-details/registration-details.component.html","webpack:///./src/app/layout/form/admin/registration-details/registration-details.component.scss","webpack:///./src/app/layout/form/admin/registration-details/registration-details.component.ts","webpack:///./src/app/layout/form/admin/registration-details/registration-details.service.ts","webpack:///./src/app/layout/form/admin/registration/registration.service.ts","webpack:///./src/environments/environment.prod.ts"],"names":[],"mappings":"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","file":"form-admin-registration-details-registration-details-module~form-form-module.js","sourcesContent":["import { MasterGender } from \"./MasterGender\";\r\nimport { MasterTitle } from \"./MasterTitle\";\r\nimport { MasterNationality } from \"./MasterNationality\";\r\nimport { MasterOccupation } from \"./MasterOccupation\";\r\nimport { MasterReligion } from \"./MasterReligion\";\r\nimport { MasterMaritalStatus } from \"./MasterMaritalStatus\";\r\nimport { MasterCountry } from \"./MasterCountry\";\r\nimport { MasterState } from \"./MasterState\";\r\nimport { MasterDistrict } from \"./MasterDistrict\";\r\n\r\nexport class MembershipRegistration {\r\n\r\n    regNo:number;\r\n    walkin: string;\r\n    walkinNo: string;\r\n    walkinDate: string;\r\n    registrationNo: string;\r\n\r\n    /*****************Personal Information Fields *****************/\r\n\r\n    regTitle: MasterTitle;\r\n    regPatName: string;\r\n    regPatFamilyName: string;\r\n    regPatLastName: string;\r\n    regSex: MasterGender;\r\n    regMarried: MasterMaritalStatus;\r\n    regCalculatedDob: any;\r\n    regAge: number;\r\n    regAgeType: String;\r\n    regReligion: MasterReligion;\r\n    regOccPn: MasterOccupation;\r\n    regNationality: MasterNationality;\r\n    regAnnivDate: any;\r\n    regPatStatus: string;\r\n    regMobileNo: string;\r\n    regResPhone: string;\r\n    regEmail: string;\r\n    regFaxNo: string;\r\n\r\n    /*****************Communication Address Fields *****************/\r\n\r\n    regHno: string;\r\n    regStreet: string;\r\n    regCity: string;\r\n    regCountry: MasterCountry;\r\n    regState: MasterState;\r\n    regArea: MasterDistrict;\r\n    regPin: string;\r\n\r\n    /*****************Miscellneous Information Fields *****************/\r\n\r\n    regBldGrp: string;\r\n    regCpAddress: string;\r\n    hospitalMr: string;\r\n    knowAboutUs: string;\r\n    /*****************Family Details Fields *****************/\r\n    regPsprtNo: string;\r\n    regPsprtIssdt: any;\r\n    regPsprtExdt: any;\r\n    regDrLicense: string;\r\n    \r\n\r\n\r\n    remarks: string;\r\n\r\n    //regPatFamilyName:string;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n}","module.exports = \"<form [formGroup]=\\\"editForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n\\r\\n  <div class=\\\"card-header titlecss\\\"><i class=\\\"fa fa-user-plus\\\" style=\\\"color:#ffff\\\">&nbsp;&nbsp;</i>Update Registration</div><br>\\r\\n  <!-- Personal Information card Start-->\\r\\n  <div class=\\\"card\\\">\\r\\n    <div class=\\\"card-header\\\">Personal Information </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n      <div style=\\\"font-family: 'Gill Sans';color: rgb(102, 99, 99);\\\">Walkin : <input type=\\\"checkbox\\\" formControlName=\\\"walkin\\\">\\r\\n      </div>\\r\\n      \\r\\n      <fieldset class=\\\"scheduler-border\\\">\\r\\n          <legend class=\\\"scheduler-border\\\">Please fill the details</legend>\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col\\\">\\r\\n                <input type=\\\"text\\\" formControlName=\\\"walkinNo\\\" placeholder=\\\"Walkin No\\\">\\r\\n              </div>\\r\\n              <div class=\\\"col\\\">\\r\\n                <input type=\\\"text\\\" placeholder=\\\"Walkin Date\\\" formControlName=\\\"walkinDate\\\" readonly>\\r\\n              </div>\\r\\n              <div class=\\\"col\\\">\\r\\n                <input type=\\\"text\\\" placeholder=\\\"Reg Number\\\" formControlName=\\\"regNo\\\" readonly>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col\\\">\\r\\n                <select formControlName=\\\"regTitle\\\" class=\\\"select-dropdown form-control\\\" [(ngModel)]=\\\"membershipRegistration.regTitle\\\"\\r\\n                  [ngClass]=\\\"{ 'is-invalid': submitted && f.regTitle.errors }\\\">\\r\\n                  <option value=\\\"\\\" disabled selected>Select Title</option>\\r\\n                  <option *ngFor=\\\"let each of masterTitle\\\" value=\\\"{{each.value}}\\\">{{each.value}}</option>\\r\\n                </select>\\r\\n                <div *ngIf=\\\"submitted && f.regTitle.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                  <div *ngIf=\\\"f.regTitle.errors.required\\\">Title is required</div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"col\\\">\\r\\n                <input type=\\\"text\\\" formControlName=\\\"regPatFamilyName\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"membershipRegistration.regPatFamilyName\\\"\\r\\n                  placeholder=\\\"Family Name\\\" [ngClass]=\\\"{ 'is-invalid': (submitted||f.regPatFamilyName.touched) && f.regPatFamilyName.errors }\\\" />\\r\\n                  <div *ngIf=\\\"(submitted||f.regPatFamilyName.touched ) && f.regPatFamilyName.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                    <div *ngIf=\\\"f.regPatFamilyName.errors.required\\\">Family Name is required</div>\\r\\n                  </div>\\r\\n              </div>\\r\\n              <!-- <div class=\\\"col\\\">\\r\\n                          <input type=\\\"text\\\" formControlName=\\\"regPatmiddleName\\\" class=\\\"form-control\\\" placeholder=\\\"Middle Name\\\">\\r\\n                      </div> -->\\r\\n            </div>\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"col\\\">\\r\\n                  <input type=\\\"text\\\" formControlName=\\\"regPatName\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"membershipRegistration.regPatName\\\"\\r\\n                    placeholder=\\\"Name\\\" [ngClass]=\\\"{ 'is-invalid': (submitted||f.regPatName.touched ) && f.regPatName.errors }\\\">\\r\\n                  <div *ngIf=\\\"(submitted||f.regPatName.touched) && f.regPatName.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                    <div *ngIf=\\\"f.regPatName.errors.required\\\"> Name is required</div>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"col\\\">\\r\\n                  <select formControlName=\\\"regSex\\\" placeholder=\\\"gender\\\" class=\\\"select-dropdown form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.regSex.errors }\\\"\\r\\n                    [(ngModel)]=\\\"membershipRegistration.regSex\\\">\\r\\n                    <option value=\\\"\\\" disabled selected>Select Gender</option>\\r\\n                    <option *ngFor=\\\"let each of masterGender \\\" value=\\\"{{each.value}}\\\">{{each.value}}</option>\\r\\n                  </select>\\r\\n                  <div *ngIf=\\\"submitted && f.regSex.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                    <div *ngIf=\\\"f.regSex.errors.required\\\"> Gender is required</div>\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"col\\\">\\r\\n                  <select formControlName=\\\"regMarried\\\" [(ngModel)]=\\\"membershipRegistration.regMarried\\\" class=\\\"select-dropdown form-control\\\">\\r\\n                    <option value=\\\"\\\" disabled selected>Select Marital Status</option>\\r\\n                    <option *ngFor=\\\"let each of masterMaritalStatus \\\" value=\\\"{{each.value}}\\\">{{each.value}}</option>\\r\\n                  </select>\\r\\n\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"col\\\">\\r\\n                  <input type=\\\"text\\\" placeholder=\\\"DataOfBirth\\\" bsDatepicker formControlName=\\\"regCalculatedDob\\\" [(ngModel)]=\\\"membershipRegistration.regCalculatedDob\\\"\\r\\n                    class=\\\"form-control\\\" (ngModelChange)=\\\"onselectedDob($event)\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.regCalculatedDob.errors }\\\" />\\r\\n\\r\\n                  <div *ngIf=\\\"submitted && f.regCalculatedDob.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                    <div *ngIf=\\\"f.regCalculatedDob.errors.required\\\"> Date Of Birth is required</div>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"col\\\">\\r\\n                  <input type=\\\"text\\\" formControlName=\\\"regAge\\\" class=\\\"form-control\\\" placeholder=\\\"Age\\\" (keypress)=_keyPress($event) [(ngModel)]=\\\"membershipRegistration.regAge\\\"\\r\\n                    (ngModelChange)=\\\"onselectedAge($event)\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.regAge.errors }\\\">\\r\\n                  <div *ngIf=\\\"submitted && f.regAge.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                    <div *ngIf=\\\"f.regAge.errors.required\\\"> Age is required</div>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"col\\\">\\r\\n                  <select formControlName=\\\"regAgeType\\\" class=\\\"select-dropdown form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.regAgeType.errors }\\\"\\r\\n                    [(ngModel)]=\\\"membershipRegistration.regAgeType\\\">\\r\\n                    <option value=\\\"\\\" disabled selected>Select Age Type</option>\\r\\n                    <option value=\\\"Y\\\">Years</option>\\r\\n                    <option value=\\\"M\\\">Months</option>\\r\\n                    <option value=\\\"D\\\">Days</option>\\r\\n                  </select>\\r\\n                  <div *ngIf=\\\"submitted && f.regAgeType.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                    <div *ngIf=\\\"f.regAgeType.required\\\"> Age Type is required</div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"col\\\">\\r\\n                  <select formControlName=\\\"regReligion\\\" class=\\\"select-dropdown form-control\\\" [(ngModel)]=\\\"membershipRegistration.regReligion\\\">\\r\\n                    <option value=\\\"\\\" disabled selected>Select Religion</option>\\r\\n                    <option *ngFor=\\\"let each of masterReligion \\\" value=\\\"{{each.value}}\\\">{{each.value}}</option>\\r\\n                  </select>\\r\\n                </div>\\r\\n                <div class=\\\"col\\\">\\r\\n                  <select formControlName=\\\"regOccPn\\\" class=\\\"select-dropdown form-control\\\" [(ngModel)]=\\\"membershipRegistration.regOccPn\\\">\\r\\n                    <option value=\\\"\\\" disabled selected>Select Occupation</option>\\r\\n                    <option *ngFor=\\\"let each of masterOccupation \\\" value=\\\"{{each.value}}\\\">{{each.value}}</option>\\r\\n                  </select>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"col\\\">\\r\\n                  <select formControlName=\\\"regNationality\\\" class=\\\"select-dropdown form-control\\\" [(ngModel)]=\\\"membershipRegistration.regNationality\\\">\\r\\n                    <option value=\\\"\\\" disabled selected>Select Nationality</option>\\r\\n                    <option *ngFor=\\\"let each of masterNationality \\\" value=\\\"{{each.value}}\\\">{{each.value}}</option>\\r\\n                  </select>\\r\\n\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"col\\\">\\r\\n                  <input type=\\\"text\\\" placeholder=\\\"Anniversary Date\\\" bsDatepicker formControlName=\\\"regAnnivDate\\\" class=\\\"form-control\\\"\\r\\n                    [(ngModel)]=\\\"membershipRegistration.regAnnivDate\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.regAgeType.errors }\\\" />\\r\\n                  <div *ngIf=\\\"submitted && f.regAnnivDate.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                    <div *ngIf=\\\"f.regAnnivDate.required\\\"> Anniversary Date is required</div>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <!-- <div class=\\\"col\\\">\\r\\n                                <input type=\\\"text\\\" formControlName=\\\"regPatStatus\\\" placeholder=\\\"Patient Status\\\"\\r\\n                                    [ngClass]=\\\"{ 'is-invalid': submitted && f.regPatStatus.errors }\\\">\\r\\n                                <div *ngIf=\\\"submitted && f.regPatStatus.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                                    <div *ngIf=\\\"f.regPatStatus.errors.required\\\">Patient status is required</div>\\r\\n                                </div>\\r\\n                            </div> -->\\r\\n                <div class=\\\"col\\\">\\r\\n                   <input type=\\\"text\\\" formControlName=\\\"regMobileNo\\\" placeholder=\\\"Mobile No\\\" (keypress)=_keyPress($event) class=\\\"form-control\\\" [(ngModel)]=\\\"membershipRegistration.regMobileNo\\\" [ngClass]=\\\"{ 'is-invalid': (submitted || f.regMobileNo.touched) && f.regMobileNo.errors }\\\"/>\\r\\n                      <div *ngIf=\\\"(submitted || f.regMobileNo.touched) && f.regMobileNo.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                          <div *ngIf=\\\"f.regMobileNo.errors.required\\\">Mobile No is required</div>\\r\\n                          <div *ngIf=\\\"f.regMobileNo.errors.maxlength\\\">Mobile No must be 10 digits </div>\\r\\n                          <div *ngIf=\\\"f.regMobileNo.errors.minlength\\\">Mobile No must be 10 digits </div>\\r\\n                          <div *ngIf=\\\"f.regMobileNo.errors.pattern\\\">Enter Valid Mobile No</div>\\r\\n                      </div>\\r\\n                    \\r\\n                </div>\\r\\n                <div class=\\\"col\\\">\\r\\n                  <input type=\\\"text\\\" formControlName=\\\"regResPhone\\\" placeholder=\\\"Phone No\\\" (keypress)=_keyPress($event) class=\\\"form-control\\\" [(ngModel)]=\\\"membershipRegistration.regResPhone\\\" [ngClass]=\\\"{ 'is-invalid': (submitted || f.regResPhone.touched) && f.regResPhone.errors }\\\"/>\\r\\n                  <div *ngIf=\\\"(submitted || f.regResPhone.touched) && f.regResPhone.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                      <div *ngIf=\\\"f.regResPhone.errors.required\\\">Phone No is required</div>\\r\\n                      <div *ngIf=\\\"f.regResPhone.errors.maxlength\\\">Phone No must be 10 digits </div>\\r\\n                      <div *ngIf=\\\"f.regResPhone.errors.minlength\\\">Phone No must be 10 digits </div>\\r\\n                      <div *ngIf=\\\"f.regResPhone.errors.pattern\\\">Enter Valid Phone No</div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"col\\\">\\r\\n                  <input type=\\\"text\\\" formControlName=\\\"regEmail\\\" class=\\\"form-control\\\" placeholder=\\\"Email\\\" [(ngModel)]=\\\"membershipRegistration.regEmail\\\"\\r\\n                    [ngClass]=\\\"{ 'is-invalid': (submitted ||f.regEmail.touched)&& f.regEmail.errors }\\\">\\r\\n                  <div *ngIf=\\\"(submitted||f.regEmail.touched) && f.regEmail.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                     <div *ngIf=\\\"f.regEmail.errors.required\\\">Email is required</div>\\r\\n                    <div *ngIf=\\\"f.regEmail.errors.email\\\">Email must be a valid email address</div>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"col\\\">\\r\\n                  <input type=\\\"text\\\" formControlName=\\\"regFaxNo\\\" placeholder=\\\"Fax No\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"membershipRegistration.regFaxNo\\\">\\r\\n                </div>\\r\\n              </div>\\r\\n              </fieldset>\\r\\n      <!--Communication Address Collapse Start-->\\r\\n      <div class=\\\"container\\\">\\r\\n\\r\\n        <button type=\\\"button\\\" (click)=\\\"addressCollapse()\\\" class=\\\"btn btn-primary collasps-btn\\\">Communication\\r\\n          Address</button><br>\\r\\n\\r\\n        <div [hidden]=\\\"isCollapsed\\\">\\r\\n                    <br>\\r\\n                    <fieldset class=\\\"scheduler-border\\\">\\r\\n                        <legend class=\\\"scheduler-border\\\">Please fill the details</legend>\\r\\n                              <div class=\\\"row\\\">\\r\\n                                <div class=\\\"col\\\">\\r\\n                                  <input type=\\\"text\\\" formControlName=\\\"regHno\\\" placeholder=\\\"House No\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"membershipRegistration.regHno\\\">\\r\\n\\r\\n                                </div>\\r\\n                                <div class=\\\"col\\\">\\r\\n                                  <input type=\\\"text\\\" formControlName=\\\"regStreet\\\" placeholder=\\\"Street\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"membershipRegistration.regStreet\\\">\\r\\n                                </div>\\r\\n\\r\\n                                <div class=\\\"col\\\">\\r\\n                                  <input type=\\\"text\\\" formControlName=\\\"regCity\\\" placeholder=\\\"City\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"membershipRegistration.regCity\\\">\\r\\n\\r\\n                                </div>\\r\\n                              </div>\\r\\n                              <div class=\\\"row\\\">\\r\\n                                <div class=\\\"col\\\">\\r\\n                                  <select formControlName=\\\"regCountry\\\" class=\\\"select-dropdown form-control\\\" [(ngModel)]=\\\"membershipRegistration.regCountry\\\"\\r\\n                                    (ngModelChange)=\\\"onselectedCountry($event)\\\">\\r\\n                                    <option value=\\\"\\\" disabled selected>Select Country</option>\\r\\n                                    <option *ngFor=\\\"let each of masterCountry \\\" value=\\\"{{each.key}}\\\">{{each.value}}</option>\\r\\n                                  </select>\\r\\n\\r\\n                                </div>\\r\\n                                <div class=\\\"col\\\">\\r\\n                                  <select formControlName=\\\"regState\\\" class=\\\"select-dropdown form-control\\\" [(ngModel)]=\\\"membershipRegistration.regState\\\"\\r\\n                                    (ngModelChange)=\\\"onselectedState($event)\\\">\\r\\n                                    <option value=\\\"\\\" disabled selected>Select State</option>\\r\\n                                    <option *ngFor=\\\"let each of masterState \\\" value=\\\"{{each.key}}\\\">{{each.value}}</option>\\r\\n                                  </select>\\r\\n\\r\\n                                </div>\\r\\n\\r\\n                                <div class=\\\"col\\\">\\r\\n                                  <select formControlName=\\\"regArea\\\" class=\\\"select-dropdown form-control\\\" [(ngModel)]=\\\"membershipRegistration.regArea\\\">\\r\\n                                    <option value=\\\"\\\" disabled selected>Select District</option>\\r\\n                                    <option *ngFor=\\\"let each of masterDistrict \\\" value=\\\"{{each.key}}\\\">{{each.value}}</option>\\r\\n                                  </select>\\r\\n\\r\\n                                </div>\\r\\n                                <div class=\\\"col\\\">\\r\\n                                  <input type=\\\"text\\\" formControlName=\\\"regPin\\\" (keypress)=_keyPress($event) class=\\\"form-control\\\" placeholder=\\\"Pincode\\\" [(ngModel)]=\\\"membershipRegistration.regPin\\\"  [ngClass]=\\\"{ 'is-invalid': (submitted ||f.regPin.touched)&& f.regPin.errors }\\\">\\r\\n                                  <div *ngIf=\\\"(submitted || f.regPin.touched) && f.regPin.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                                      <div *ngIf=\\\"f.regPin.errors.required\\\">Pin code is required</div>\\r\\n                                      <div *ngIf=\\\"f.regPin.errors.maxlength\\\">Pin code  must be 6 digits </div>\\r\\n                                      <div *ngIf=\\\"f.regPin.errors.minlength\\\">Pin code  must be 6 digits </div>\\r\\n                                  </div>\\r\\n\\r\\n                                </div>\\r\\n                              </div>\\r\\n                      </fieldset>\\r\\n        </div>\\r\\n      </div>\\r\\n      <!--Communication Address Collapse End-->\\r\\n      <!--Miscellneous Collapse Start-->\\r\\n\\r\\n      <div class=\\\"container\\\">\\r\\n        <button type=\\\"button\\\" (click)=\\\"miscellneousCollapse()\\\" class=\\\"btn btn-primary collasps-btn\\\">Miscellneous\\r\\n          Information\\r\\n        </button>\\r\\n        <div [hidden]=\\\"ismiscellneousCollapse\\\">\\r\\n          <br>\\r\\n          <fieldset class=\\\"scheduler-border\\\">\\r\\n              <legend class=\\\"scheduler-border\\\">Please fill the details</legend>\\r\\n\\r\\n                    <div class=\\\"row\\\">\\r\\n                      <div class=\\\"col\\\">\\r\\n                        <select formControlName=\\\"regBldGrp\\\" class=\\\"select-dropdown form-control\\\" [(ngModel)]=\\\"membershipRegistration.regBldGrp\\\">\\r\\n                          <option value=\\\"\\\" disabled selected>Select Blood Group</option>\\r\\n                          <option *ngFor=\\\"let each of masterBloodGrup \\\" value=\\\"{{each.value}}\\\">{{each.value}}</option>\\r\\n                        </select>\\r\\n\\r\\n                      </div>\\r\\n                      <div class=\\\"col\\\">\\r\\n                        <input type=\\\"text\\\" formControlName=\\\"hospitalMr\\\" placeholder=\\\"Hospital MR\\\" class=\\\"form-control\\\"\\r\\n                          [(ngModel)]=\\\"membershipRegistration.hospitalMr\\\">\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"row\\\">\\r\\n                      <div class=\\\"col\\\">\\r\\n                        <input type=\\\"text\\\" formControlName=\\\"regCpAddress\\\" placeholder=\\\"Address...\\\" class=\\\"form-control\\\"\\r\\n                          [(ngModel)]=\\\"membershipRegistration.regCpAddress\\\">\\r\\n                      </div>\\r\\n                      <div class=\\\"col\\\">\\r\\n                        <select formControlName=\\\"knowAboutUs\\\" class=\\\"select-dropdown form-control\\\"   [(ngModel)]=\\\"membershipRegistration.knowAboutUs\\\" [ngClass]=\\\"{ 'is-invalid': (submitted || f.knowAboutUs.touched) && f.knowAboutUs.errors }\\\">\\r\\n                          <option value=\\\"\\\" disabled selected>How did you know about us?</option>\\r\\n                                        <option value=\\\"Friends\\\">Friends</option>\\r\\n                                        <option value=\\\"Ad\\\">Ad</option>\\r\\n                                        <option value=\\\"Internet\\\">Internet</option>\\r\\n                                        <option value=\\\"Referred by Hospital\\\">Referred by Hospital</option>\\r\\n                                        <option value=\\\"Others\\\">Others</option>\\r\\n\\r\\n                        </select>\\r\\n                        <div *ngIf=\\\"(submitted || f.knowAboutUs.touched) && f.knowAboutUs.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                            <div *ngIf=\\\"f.knowAboutUs.errors.required\\\"> Please fill out the filed</div>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n          </fieldset>\\r\\n        </div>\\r\\n      </div>\\r\\n      <!--Miscellneous  Collapse End-->\\r\\n      <!--Family Details  Collapse Start-->\\r\\n      <div class=\\\"container\\\">\\r\\n        <button type=\\\"button\\\" (click)=\\\"familyCollapse()\\\" class=\\\"btn btn-primary collasps-btn\\\">Family\\r\\n          Details\\r\\n        </button>\\r\\n        <div [hidden]=\\\"isFamilyCollapse\\\">\\r\\n          <br>\\r\\n          <fieldset class=\\\"scheduler-border\\\">\\r\\n              <legend class=\\\"scheduler-border\\\">Please fill the details</legend>\\r\\n\\r\\n                <div class=\\\"row\\\">\\r\\n                  <div class=\\\"col\\\">\\r\\n                    <input type=\\\"text\\\" formControlName=\\\"regPsprtNo\\\" placeholder=\\\"Passport No\\\" class=\\\"form-control\\\"\\r\\n                      [(ngModel)]=\\\"membershipRegistration.regPsprtNo\\\">\\r\\n                  </div>\\r\\n                  <div class=\\\"col\\\">\\r\\n                    <input type=\\\"text\\\" placeholder=\\\"issued on\\\" bsDatepicker formControlName=\\\"regPsprtIssdt\\\" class=\\\"form-control\\\"\\r\\n                      [(ngModel)]=\\\"membershipRegistration.regPsprtIssdt\\\" />\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"row\\\">\\r\\n                  <div class=\\\"col\\\">\\r\\n                    <input type=\\\"text\\\" placeholder=\\\"Valid upto\\\" bsDatepicker formControlName=\\\"regPsprtExdt\\\" class=\\\"form-control\\\"\\r\\n                      [(ngModel)]=\\\"membershipRegistration.regPsprtExdt\\\" />\\r\\n                  </div>\\r\\n                  <div class=\\\"col\\\">\\r\\n                    <input type=\\\"text\\\" formControlName=\\\"regDrLicense\\\" placeholder=\\\"Driving License No\\\" class=\\\"form-control\\\"\\r\\n                      [(ngModel)]=\\\"membershipRegistration.regDrLicense\\\">\\r\\n                  </div>\\r\\n                </div>\\r\\n          </fieldset>\\r\\n        </div>\\r\\n      </div>\\r\\n      <!--Family Details  Collapse End-->\\r\\n      <div style=\\\"font-family: Gill Sans;\\\"><textarea  formControlName=\\\"remarks\\\" class=\\\"form-control\\\"\\r\\n          placeholder=\\\"Enter Remarks...\\\"></textarea></div><br>\\r\\n      <div style=\\\"float: right;\\\">\\r\\n        <button class=\\\"btn btn-outline-primary\\\" [disabled]=\\\"!editForm.valid\\\">Update</button>&nbsp;&nbsp;\\r\\n        <button type=\\\"reset\\\" (click)=\\\"clear()\\\" class=\\\"btn btn-outline-primary\\\">Clear</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <!-- Personal Information card End-->\\r\\n\\r\\n</form>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { RegistrationDetailsService } from './registration-details.service';\r\nimport { MembershipRegistration } from '../models/MembershipRegistration';\r\nimport { RegistrationService } from '../registration/registration.service';\r\n\r\nimport { MasterTitle } from \"../models/MasterTitle\";\r\nimport { MasterGender } from \"../models/MasterGender\";\r\nimport { MasterNationality } from \"../models/MasterNationality\";\r\nimport { MasterCountry } from \"../models/MasterCountry\";\r\nimport { MasterState } from \"../models/masterState\";\r\nimport { MasterDistrict } from \"../models/MasterDistrict\";\r\nimport { MasterOccupation } from \"../models/MasterOccupation\";\r\nimport { MasterReligion } from \"../models/MasterReligion\";\r\nimport { MasterMaritalStatus } from \"../models/MasterMaritalStatus\";\r\nimport { MasterBloodGroup } from \"../models/MasterBloodGroup\";\r\nimport {Router} from \"@angular/router\";\r\nimport {first} from \"rxjs/operators\";\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-registration-details',\r\n  templateUrl: './registration-details.component.html',\r\n  styleUrls: ['./registration-details.component.scss']\r\n})\r\nexport class RegistrationDetailsComponent implements OnInit {\r\n\r\n  public membershipRegistration: MembershipRegistration;\r\n  public regNo: number;\r\n\r\n  masterTitle: Array<MasterTitle> = [];\r\n  masterGender: Array<MasterGender> = [];\r\n  masterNationality: Array<MasterNationality> = [];\r\n  masterCountry: Array<MasterCountry> = [];\r\n  masterState: Array<MasterState> = [];\r\n\r\n  masterOccupation: Array<MasterOccupation> = [];\r\n  masterReligion: Array<MasterReligion> = [];\r\n  masterBloodGrup: Array<MasterBloodGroup> = [];\r\n  masterMaritalStatus: Array<MasterMaritalStatus> = [];\r\n  masterDistrict: Array<MasterDistrict> = [];\r\n\r\n  constructor(private regDetailsService: RegistrationDetailsService, private registrationService: RegistrationService, private formBuilder: FormBuilder,private router: Router) {\r\n\r\n\r\n    this.membershipRegistration = new MembershipRegistration();\r\n  }\r\n\r\n  editForm: FormGroup;\r\n  public selectedDob: any;\r\n  public age: number;\r\n  public regNumber:string;\r\n  ngOnInit() {\r\n    let reg = localStorage.getItem(\"editUserId\");\r\n    //alert(\"calling update*****\"+registrationId);\r\n    if(!reg) {\r\n      alert(\"Invalid action.\")\r\n      this.router.navigate(['registration-workout']);\r\n      return;\r\n    }\r\n\r\n    \r\n\r\n    this.editForm = this.formBuilder.group({\r\n\r\n      walkin: [],\r\n      walkinNo: [],\r\n      walkinDate: [],\r\n      //registrationNo: [],\r\n\r\n      regNo: [],\r\n      regRegDate:[],\r\n      regTime:[],\r\n      regApptFlag:[],\r\n      regApptNo:[],\r\n      regApptDate:[],\r\n      regDocCode:[],\r\n      regBillType:[],\r\n      regWcNum:[],\r\n      regPatLocalName:[],\r\n      regDob:[],\r\n      regCivilId:[],\r\n      regPoboxNo:[],\r\n      regOffPhone:[],\r\n      regCpTitle:[],\r\n      regContactName:[],\r\n      regCpPhone:[],\r\n      regCpMobileNo:[],\r\n      regHeadOfFamilyName:[],\r\n      regHeadFamilyId:[],\r\n      regFamilyHeadRelation:[],\r\n      //regDrLicense:[],\r\n      regCompanyCode:[],\r\n      regEmpCode:[],\r\n      regInsCompanyCode:[],\r\n\r\n      regInsCompanyId:[],\r\n      regInsPlanId:[],\r\n      regInsPolicyNo:[],\r\n      regPwd:[],\r\n      regPatAdmissionType:[],\r\n      regIsmlc:[],\r\n      regMlcNo:[],\r\n      regInfoPolice:[],\r\n      regPoliceStationName:[],\r\n\r\n      regPatBoughtby: [],\r\n      regBoughtByAddr: [],\r\n      regBoughtByPhone: [],\r\n      regBoughtByMobileNo: [],\r\n      regIsCancel:[],\r\n      regDobType:[],\r\n      regBornType:[],\r\n      regMotherMrNumber:[],\r\n      regDeliveryType:[],\r\n      regReqCount:[],\r\n      regAmtCollFlag:[],\r\n      regPatTaeiff:[],\r\n\r\n\r\n      regPatCategory: [],\r\n      regReason: [],\r\n      regOprId: [],\r\n      regOprDate: [],\r\n      regIsTemporary:[],\r\n      regContCode:[],\r\n      regContInsCode:[],\r\n      regEmpStatus:[],\r\n      regWcType:[],\r\n      regRtNo:[],\r\n      regPkgDescription:[],\r\n      regValidity:[],\r\n      createdDate:[],\r\n      updatedDate:[],\r\n      createdBy:[],\r\n      modifiedBy:[],\r\n      regBabyCount:[],\r\n\r\n\r\n      regTitle: ['', Validators.required],\r\n      regPatName: ['', [Validators.required, Validators.minLength(2), Validators.maxLength(10)]],\r\n      regPatLastName: [],\r\n      regPatFamilyName: ['', Validators.required],\r\n      regSex: ['', Validators.required],\r\n      regMarried: ['', Validators.required],\r\n      regCalculatedDob: ['', Validators.required],\r\n      regAge: [],\r\n      regAgeType: ['', Validators.required],\r\n      regReligion:['', Validators.required],\r\n      regOccPn:['', Validators.required],\r\n      regNationality:['', Validators.required],\r\n      regAnnivDate: ['', Validators.required],\r\n      regPatStatus: [],\r\n      remarks: [],\r\n      regMobileNo: ['', [Validators.required,Validators.maxLength(10),Validators.minLength(10),Validators.pattern(/^[6-9]\\d{9}$/)]],\r\n      regResPhone: ['', [Validators.maxLength(10),Validators.minLength(10),Validators.pattern(/^[6-9]\\d{9}$/)]],\r\n      regFaxNo: ['', Validators.required],\r\n      regEmail: ['', [Validators.required, Validators.email]],\r\n\r\n\r\n      regHno: [],\r\n      regStreet: [],\r\n      regCity: [],\r\n      regArea: ['', Validators.required],\r\n      regState: ['', Validators.required],\r\n      regCountry: ['', Validators.required],\r\n      regPin: ['',[Validators.maxLength(6),Validators.minLength(6)]],\r\n      regHspCode:[],\r\n\r\n      regBldGrp: ['', Validators.required],\r\n      hospitalMr: [],\r\n      regCpAddress: [],\r\n      \r\n\r\n      regPsprtNo: [],\r\n      regPsprtIssdt: null,\r\n      regPsprtExdt: null,\r\n      regDrLicense: [],\r\n      knowAboutUs: [],\r\n\r\n\r\n    })\r\n\r\n    // this.regDetailsService.getMembershipDetails(+reg)\r\n    //   .subscribe( data => {\r\n    //     this.editForm.setValue(data);\r\n    //   });\r\n\r\n    this.getRegistrationDetails(+reg);\r\n    //Get Countries From Master Countries Table\r\n    let array = [];\r\n\r\n    this.registrationService.getCountries().subscribe((data: MasterCountry[]) => {\r\n      this.masterCountry = data;\r\n      console.log(this.masterCountry);\r\n      const mapped = Object.keys(this.masterCountry).map(key => ({ type: key, value: this.masterCountry[key] }));\r\n      console.log(mapped);\r\n      for (let each in data) {\r\n\r\n        array.push({ \"key\": each, \"value\": data[each] })\r\n        this.masterCountry = array;\r\n      }\r\n    });\r\n\r\n    //Get Titles From Master Title Table\r\n    let masterTitlearray = [];\r\n    this.registrationService.gettitles().subscribe((data: MasterTitle[]) => {\r\n      this.masterTitle = data;\r\n      for (let each in data) {\r\n        masterTitlearray.push({ \"key\": each, \"value\": data[each] })\r\n        this.masterTitle = masterTitlearray;\r\n      }\r\n      console.log(this.masterTitle);\r\n\r\n    });\r\n\r\n    //Get Gender From Master Gender Table\r\n    let mastermasterGenderarray = [];\r\n    this.registrationService.getGender()\r\n      .subscribe((data: MasterGender[]) => {\r\n        this.masterGender = data;\r\n        for (let each in data) {\r\n          mastermasterGenderarray.push({ \"key\": each, \"value\": data[each] })\r\n          this.masterGender = mastermasterGenderarray;\r\n        }\r\n        console.log(this.masterGender);\r\n\r\n      });\r\n\r\n    //Get Natitionality From Master Nationality Table\r\n    let masterNationalityarray = [];\r\n    this.registrationService.getNationalities()\r\n      .subscribe((data: MasterNationality[]) => {\r\n        this.masterNationality = data;\r\n        for (let each in data) {\r\n          masterNationalityarray.push({ \"key\": each, \"value\": data[each] })\r\n\r\n          this.masterNationality = masterNationalityarray;\r\n\r\n        }\r\n        console.log(this.masterNationality);\r\n\r\n      });\r\n\r\n    //Get Occupation From Master Occupation Table\r\n    let masterOccupationarray = [];\r\n    this.registrationService.getOccupations()\r\n      .subscribe((data: MasterOccupation[]) => {\r\n        this.masterOccupation = data;\r\n        for (let each in data) {\r\n          masterOccupationarray.push({ \"key\": each, \"value\": data[each] })\r\n\r\n          this.masterOccupation = masterOccupationarray;\r\n\r\n        }\r\n        console.log(this.masterOccupation);\r\n\r\n      });\r\n\r\n    //Get Religion From Master Religion Table\r\n    let masterReligionarray = [];\r\n    this.registrationService.getReligions()\r\n      .subscribe((data: MasterReligion[]) => {\r\n        this.masterReligion = data;\r\n        for (let each in data) {\r\n          masterReligionarray.push({ \"key\": each, \"value\": data[each] })\r\n\r\n          this.masterReligion = masterReligionarray;\r\n\r\n        }\r\n        console.log(this.masterReligion);\r\n\r\n      });\r\n\r\n    //Get Bllod Group From Master Blood Group Table\r\n    let masterBloodGroupArray = [];\r\n    this.registrationService.getBloodgroups()\r\n      .subscribe((data: MasterBloodGroup[]) => {\r\n        this.masterBloodGrup = data;\r\n        for (let each in data) {\r\n          masterBloodGroupArray.push({ \"key\": each, \"value\": data[each] })\r\n          this.masterBloodGrup = masterBloodGroupArray;\r\n        }\r\n\r\n      });\r\n\r\n    //Get Marital Status From Master Marital Status Table\r\n    let masterMaritalStatusarray = [];\r\n    this.registrationService.getMaritalStatus()\r\n      .subscribe((data: MasterMaritalStatus[]) => {\r\n        this.masterMaritalStatus = data;\r\n        for (let each in data) {\r\n          masterMaritalStatusarray.push({ \"key\": each, \"value\": data[each] })\r\n\r\n          this.masterMaritalStatus = masterMaritalStatusarray;\r\n\r\n        }\r\n        console.log(this.masterMaritalStatus);\r\n\r\n      });\r\n\r\n  }\r\n\r\n  //Get States based on Country\r\n  onselectedCountry(countryCode: any) {\r\n    console.log(\"Country code\" + countryCode)\r\n    if (countryCode != null && countryCode != undefined) {\r\n      this.countryFunction(countryCode);\r\n    }\r\n\r\n  }\r\n\r\n  countryFunction(countryCode: any) {\r\n    //this.modifiedText=val;\r\n\r\n    let team: MasterState = this.editForm.value;\r\n    console.log(\"team...\" + countryCode)\r\n    let array = [];\r\n    this.registrationService.getStates(countryCode)\r\n      .subscribe((data: MasterState[]) => {\r\n        this.masterState = data;\r\n        for (let each in data) {\r\n          array.push({ \"key\": each, \"value\": data[each] })\r\n          this.masterState = array;\r\n        }\r\n        console.log(this.masterState);\r\n      });\r\n\r\n\r\n      \r\n\r\n  }\r\n\r\n  //Get Districts based on State\r\n  onselectedState(stateCode: any) {\r\n    console.log(\"State code....\" + stateCode)\r\n    if (stateCode != null && stateCode != undefined) {\r\n      this.stateFunction(stateCode);\r\n    }\r\n\r\n  }\r\n  //allows only numbers\r\n  _keyPress(event: any) {\r\n    const pattern = /[0-9]/;\r\n    let inputChar = String.fromCharCode(event.charCode);\r\n    if (!pattern.test(inputChar)) {\r\n        event.preventDefault();\r\n\r\n    }}\r\n\r\n  stateFunction(stateCode: any) {\r\n    //this.modifiedText2=val;\r\n    console.log(\"State code\" + stateCode)\r\n    let team: MasterDistrict = this.editForm.value;\r\n    let array2 = [];\r\n    this.registrationService.getDistrict(stateCode).subscribe((data: MasterDistrict[]) => {\r\n      this.masterDistrict = data;\r\n      for (let each in data) {\r\n        array2.push({ \"key\": each, \"value\": data[each] })\r\n        this.masterDistrict = array2;\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n  //Age Calculation From DOB\r\n  onselectedDob(dob: any) {\r\n    console.log(\"Date of Birth ......\" + dob)\r\n    if (dob != null && dob != undefined) {\r\n      var timeDiff = Math.abs(Date.now() - new Date(dob).getTime());\r\n      this.membershipRegistration.regAge = Math.floor(timeDiff / (1000 * 3600 * 24) / 365.25);\r\n      console.log(\"Age is ......\" + this.membershipRegistration.regAge)\r\n    } else {\r\n      this.membershipRegistration.regAge = 0;\r\n    }\r\n  }\r\n\r\n  //Get DOB From Age\r\n\r\n  onselectedAge(enteredAge: any) {\r\n\r\n    var CurrentYear = new Date().getFullYear();\r\n    var CurrentMonth = new Date().getMonth() + 1;\r\n    var CurrentDate = new Date().getDate();\r\n    if (enteredAge != '0' && enteredAge != '') {\r\n      var AgeYear = CurrentYear - enteredAge;\r\n      this.membershipRegistration.regCalculatedDob = CurrentMonth + \"/\" + CurrentDate + \"/\" + AgeYear;\r\n      console.log(\"Date of Birth ......\" + this.membershipRegistration.regCalculatedDob)\r\n    } else {\r\n      //this.selectedDob =CurrentMonth+\"/\"+ CurrentDate +\"/\"+CurrentYear;\r\n      //this.age=0;\r\n    }\r\n  }\r\n  getRegistrationDetails(regNo) {\r\n    \r\n    console.log(regNo)\r\n\r\n    this.regDetailsService.getMembershipDetails(regNo).subscribe((data: any) => {\r\n\r\n      this.membershipRegistration = data;\r\n\r\n      if (this.membershipRegistration.regCalculatedDob != null) {\r\n\r\n        var dobYear = this.membershipRegistration.regCalculatedDob.toString().substring(0, 4)\r\n        var dobMonth = this.membershipRegistration.regCalculatedDob.toString().substring(4, 6)\r\n        var dobDay = this.membershipRegistration.regCalculatedDob.toString().substring(6, 8);\r\n        var resDobDate = dobYear + \"-\" + dobMonth + \"-\" + dobDay;\r\n\r\n        const dateObj = new Date(resDobDate);\r\n        this.membershipRegistration.regCalculatedDob = dateObj;\r\n\r\n      }\r\n      if (this.membershipRegistration.regAnnivDate != null) {\r\n\r\n        var annivYear = this.membershipRegistration.regAnnivDate.toString().substring(0, 4)\r\n        var annivMonth = this.membershipRegistration.regAnnivDate.toString().substring(4, 6)\r\n        var annivDay = this.membershipRegistration.regAnnivDate.toString().substring(6, 8);\r\n        var resAnnivDate = annivYear + \"-\" + annivMonth + \"-\" + annivDay;\r\n\r\n        const dateObj = new Date(resAnnivDate);\r\n        this.membershipRegistration.regAnnivDate = dateObj;\r\n\r\n      }\r\n\r\n      if (this.membershipRegistration.regPsprtIssdt != null) {\r\n\r\n        var psprtIssYear = this.membershipRegistration.regPsprtIssdt.toString().substring(0, 4)\r\n        var psprtIssMonth = this.membershipRegistration.regPsprtIssdt.toString().substring(4, 6)\r\n        var psprtIssDay = this.membershipRegistration.regPsprtIssdt.toString().substring(6, 8);\r\n        var resPsprtIssDate = psprtIssYear + \"-\" + psprtIssMonth + \"-\" + psprtIssDay;\r\n\r\n        const dateObj = new Date(resPsprtIssDate);\r\n        this.membershipRegistration.regPsprtIssdt = dateObj;\r\n\r\n      }\r\n\r\n      if (this.membershipRegistration.regPsprtExdt != null) {\r\n\r\n        var psprtExpYear = this.membershipRegistration.regPsprtExdt.toString().substring(0, 4)\r\n        var psprtExpMonth = this.membershipRegistration.regPsprtExdt.toString().substring(4, 6)\r\n        var psprtExpDay = this.membershipRegistration.regPsprtExdt.toString().substring(6, 8);\r\n        var resPsprtExpDate = psprtExpYear + \"-\" + psprtExpMonth + \"-\" + psprtExpDay;\r\n\r\n        const dateObj = new Date(resPsprtExpDate);\r\n        this.membershipRegistration.regPsprtExdt = dateObj;\r\n\r\n      }\r\n\r\n    })\r\n\r\n  }\r\n\r\n  // convenience getter for easy access to form fields\r\n  get f() { return this.editForm.controls; }\r\n  onSubmit() {\r\n    console.log(\"Date of Birth..............\"+this.editForm.value.knowAboutUs)\r\n    this.regNumber = localStorage.getItem(\"editUserId\");\r\n    this.editForm.value.regNo=this.regNumber;\r\n    \r\n    this.regDetailsService.updateUser(this.editForm.value)\r\n      .pipe(first())\r\n      .subscribe(\r\n        data => {\r\n          this.router.navigate(['registration-worklist']);\r\n        },\r\n        error => {\r\n          alert(error);\r\n        });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { map, filter, switchMap } from 'rxjs/operators';\r\n\r\nimport { MembershipRegistration } from '../models/MembershipRegistration';\r\nimport { CommonModelResponse } from '../models/responsemodel';\r\n//import {MasterCountry} from \"./masterCountry\";\r\n\r\nconst httpOptions = {\r\n  headers: new HttpHeaders({ 'Content-Type': 'application/json', 'Access-Control-Allow-Origin': '*' })\r\n};\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RegistrationDetailsService {\r\n  // formVar: FormGroup;\r\n  // webPagesData:WebPagesData[];\r\n\r\n  updateUrl = 'http://localhost:8086/updateRegistrationApi';\r\n  getDetailsById = 'http://localhost:8086/getRegDetailsByRegNum';\r\n\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getMembershipDetails(reg: number): Observable<CommonModelResponse<MembershipRegistration>> {\r\n    \r\n    //alert(\"Registartion No \"+reg);\r\n    return this.http.get<CommonModelResponse<MembershipRegistration>>(this.getDetailsById + \"/\" + reg).pipe(data => data);\r\n    \r\n  }\r\n\r\n  updateUser(MembershipRegistration: MembershipRegistration): Observable<any> {\r\n    \r\n    var r_id = Number(MembershipRegistration.regNo)\r\n    \r\n    //alert(\"id in service\"+id)\r\n    console.log(\"Id******\"+MembershipRegistration.regNo)\r\n    console.log(\"entered name******\"+MembershipRegistration.regPatName)\r\n    return this.http.put(this.updateUrl + '/' +r_id, MembershipRegistration);\r\n  }\r\n\r\n\r\n}\r\n\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { map, filter, switchMap } from 'rxjs/operators';\r\nimport { FormGroup, FormBuilder, FormControl } from '@angular/forms';\r\nimport { Registration } from \"../models/Registration\";\r\nimport { MembershipRegistration } from '../models/MembershipRegistration';\r\nimport{environment} from '../../../../../environments/environment.prod'\r\n\r\n//import {MasterCountry} from \"./masterCountry\";\r\n\r\nconst httpOptions = {\r\n  headers: new HttpHeaders({ 'Content-Type': 'application/json', 'Access-Control-Allow-Origin': '*' })\r\n};\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RegistrationService {\r\n  // formVar: FormGroup;\r\n  // webPagesData:WebPagesData[];\r\n  base_Url=environment.base_Url\r\n  subreg=environment.sub_reg\r\n  submasterData=environment.sub_masterdata\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  // masterCountry : MasterCountry[];\r\n  // getDetails():Observable<WebPagesData[]> {\r\n\r\n  // alert(\"in serveice\")\r\n  //  return this.http.get<WebPagesData[]>(this.url);\r\n  //  }\r\n\r\n  patientInsert(registration: MembershipRegistration): Observable<any> {\r\n    //getDetails(searchkey:String){\r\n    //return this.http.get(this.url);\r\n\r\n    console.log(registration.regCalculatedDob);\r\n    return this.http.post(this.base_Url+this.subreg+\"membershipRegistration\", registration);\r\n  }\r\n\r\n\r\n  // getPatientDetails(): Observable<MasterCountry[]> {\r\n  //       return this.http.get<MasterCountry[]>(this.getUrl);\r\n  //     }\r\n  // getPatientDetails() {\r\n  //       return this.http.get(this.getUrl).pipe(map((response: any) => response.json()));\r\n  //    }\r\n\r\n  getCountries() {\r\nconsole.log(\"\"+this.base_Url+this.submasterData)\r\n    return this.http.get(`${this.base_Url+this.submasterData+\"countriesApi\"}`);\r\n  }\r\n  getStates(country): Observable<any> {\r\n    return this.http.get(this.base_Url+this.submasterData+ \"getStatesByCountryApi/\" + country);\r\n  }\r\n  getDistrict(state): Observable<any> {\r\n    return this.http.get(this.base_Url+this.submasterData + \"getDistrictByStateApi/\" + state);\r\n  }\r\n\r\n  gettitles() {\r\n    return this.http.get(this.base_Url+this.submasterData+\"titleApi\");\r\n  }\r\n  getGender() {\r\n    return this.http.get(this.base_Url+this.submasterData+\"gendersApi\");\r\n  }\r\n  getBloodgroups() {\r\n    return this.http.get(this.base_Url+this.submasterData+\"bloodGroupsApi\");\r\n  }\r\n  getNationalities() {\r\n    return this.http.get(this.base_Url+this.submasterData+\"nationalitiesApi\");\r\n  }\r\n  getOccupations() {\r\n    return this.http.get(this.base_Url+this.submasterData+\"occupationsApi\");\r\n  }\r\n\r\n  getReligions() {\r\n    return this.http.get(this.base_Url+this.submasterData+\"religionsApi\");\r\n  }\r\n  getMaritalStatus() {\r\n    return this.http.get(this.base_Url+this.submasterData+\"maritalStatusApi\");\r\n  }\r\n\r\n}\r\n\r\n\r\n","export const environment = {\r\n  production: true,\r\n  base_Url:'http://localhost:8086/',\r\n  sub_masterdata:'masterDataApi/',\r\n  sub_reg:'registration/'\r\n};\r\n"],"sourceRoot":""}