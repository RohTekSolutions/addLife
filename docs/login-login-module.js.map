{"version":3,"sources":["webpack:///./src/app/auth/login-info.ts","webpack:///./src/app/login/login-routing.module.ts","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.scss","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/login/login.module.ts"],"names":[],"mappings":"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","file":"login-login-module.js","sourcesContent":["export class AuthLoginInfo {\r\n    username: string;\r\n    password: string;\r\n\r\n    constructor(username: string, password: string) {\r\n        this.username = username;\r\n        this.password = password;\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { DashboardComponent } from '../layout/dashboard/dashboard.component';\r\nimport { LoginComponent } from './login.component';\r\n\r\n\r\nconst routes: Routes = [\r\n    \r\n    {\r\n        path: '',\r\n        component: LoginComponent\r\n        \r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n    \r\n})\r\nexport class LoginRoutingModule {}\r\n","module.exports = \"<div [@routerTransition]>\\r\\n  <!-- <div><img class=\\\"logo\\\" src=\\\"assets/images/logo.png\\\" height=\\\"50px\\\"></div> -->\\r\\n  <form name=\\\"form\\\" (ngSubmit)=\\\"f.form.valid && onSubmit()\\\" #f=\\\"ngForm\\\" novalidate>\\r\\n\\r\\n    <div class=\\\"card login-page\\\">\\r\\n      <div *ngIf=\\\"f.submitted && isLoginFailed\\\">\\r\\n        <div class=\\\"alert alert-danger\\\"> Login failed: {{errorMessage}}</div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"card-header login-header\\\">Welcome To Add Life</div>\\r\\n      <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col\\\">\\r\\n            <input type=\\\"text\\\" name=\\\"username\\\" style=\\\"text-align: center\\\" placeholder=\\\"Enter User Name\\\" [(ngModel)]=\\\"form.username\\\"\\r\\n              #username=\\\"ngModel\\\" required />\\r\\n            <div *ngIf=\\\"f.submitted && username.invalid\\\">\\r\\n              <div *ngIf=\\\"username.errors.required\\\" class=\\\"validation-error\\\">Username is required</div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col\\\">\\r\\n            <input type=\\\"password\\\" name=\\\"password\\\" style=\\\"text-align: center\\\" placeholder=\\\"Enter Password \\\" [(ngModel)]=\\\"form.password\\\"\\r\\n              #password=\\\"ngModel\\\" required minlength=\\\"6\\\">\\r\\n            <div *ngIf=\\\"f.submitted && password.invalid\\\">\\r\\n              <div *ngIf=\\\"password.errors.required\\\" class=\\\"validation-error\\\">Password is required</div>\\r\\n              <div *ngIf=\\\"password.errors.minlength\\\" class=\\\"validation-error\\\">Password must be at least 6 characters</div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div style=\\\"float: right;\\\">\\r\\n          <button class=\\\"btn btn-primary\\\">Login</button>\\r\\n\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </form>\\r\\n</div>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { AuthService } from '../auth/auth.service';\r\nimport { TokenStorageService } from '../auth/token-storage.service';\r\nimport { AuthLoginInfo } from '../auth/login-info';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\n\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  form: any = {};\r\n  isLoggedin = false;\r\n  isLoginFailed = false;\r\n  errorMessage = '';\r\n  roles: string[] = [];\r\n  currentUser: String;\r\n  private loginInfo: AuthLoginInfo;\r\n\r\n\r\n  constructor(private authService: AuthService, private tokenStorage: TokenStorageService, private route: ActivatedRoute,\r\n    private router: Router, ) { }\r\n\r\n  ngOnInit() {\r\n    if (this.tokenStorage.getToken()) {\r\n      //this.isLoggedin = true;\r\n      this.roles = this.tokenStorage.getAuthorities();\r\n    }\r\n  }\r\n\r\n  onSubmit() {\r\n    console.log(this.form);\r\n    this.loginInfo = new AuthLoginInfo(\r\n      this.form.username,\r\n      this.form.password);\r\n\r\n    this.authService.attemptAuth(this.loginInfo).subscribe(\r\n      data => {\r\n        this.tokenStorage.saveToken(data.accessToken);\r\n        console.log(\"JWT Token..........\" + data.accessToken)\r\n        this.tokenStorage.saveUsername(data.username);\r\n        this.tokenStorage.saveAuthorities(data.authorities);\r\n\r\n        this.isLoginFailed = false;\r\n        this.isLoggedin = true;\r\n        this.roles = this.tokenStorage.getAuthorities();\r\n        this.currentUser = data.username;\r\n\r\n        localStorage.setItem('currentUser', data.username);\r\n        this.reloadPage();\r\n        console.log(this.isLoggedin)\r\n        localStorage.setItem('isLoggedin', 'true');\r\n        this.router.navigate(['/dashboard']);\r\n\r\n      },\r\n      error => {\r\n        console.log(error);\r\n        this.errorMessage = error.error.message;\r\n        setTimeout(()=>{\r\n          this.errorMessage = '';\r\n     }, 10000);\r\n        this.isLoginFailed = true;\r\n      }\r\n    );\r\n  }\r\n\r\n  reloadPage() {\r\n    window.location.reload();\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { LoginRoutingModule } from './login-routing.module';\r\nimport { LoginComponent } from './login.component';\r\n\r\nimport { FormsModule }   from '@angular/forms';  \r\n\r\n\r\n\r\n@NgModule({\r\n    imports: [CommonModule, LoginRoutingModule,FormsModule],\r\n    declarations: [LoginComponent]\r\n})\r\nexport class LoginModule {}\r\n"],"sourceRoot":""}